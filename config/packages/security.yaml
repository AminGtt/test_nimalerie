security:
    encoders:
        App\Entity\Client:
            algorithm: auto
        App\Entity\Admin:
            algorithm: auto

    providers:
        admin:
            entity:
                class: App\Entity\Admin
                property: username
        client:
            entity:
                class: App\Entity\Client
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/admin
            anonymous: true
            provider: admin
            guard:
                authenticators:
                    - App\Security\BackOfficeAuthenticator
                entry_point: App\Security\BackOfficeAuthenticator
            logout:
                path: app_logout_admin
                # where to redirect after logout
                target: app_login_admin
        main:
            pattern: ^/
            anonymous: true
            lazy: true
            provider: client
            guard:
                authenticators:
                    - App\Security\FrontOfficeAuthenticator
                entry_point: App\Security\FrontOfficeAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true


    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/myAccount, roles: ROLE_USER }
#        - { path: ^/dashboard, roles: [ROLE_DASHBOARD, ROLE_ADMIN ]}
    role_hierarchy:
        ROLE_DASHBOARD: ROLE_USER
        ROLE_ADMIN: ROLE_USER
